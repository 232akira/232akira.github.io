{
    "version": "https://jsonfeed.org/version/1",
    "title": "Per aspera ad astra • All posts by \"ai\" tag",
    "description": "欢迎交流学习!",
    "home_page_url": "https://232akira.github.io",
    "items": [
        {
            "id": "https://232akira.github.io/2025/06/16/%E5%A4%87%E5%BF%98%E5%BD%95-%E6%A1%88%E4%BE%8B/",
            "url": "https://232akira.github.io/2025/06/16/%E5%A4%87%E5%BF%98%E5%BD%95-%E6%A1%88%E4%BE%8B/",
            "title": "备忘录 | 案例",
            "date_published": "2025-06-16T02:10:30.000Z",
            "content_html": "<p>工作以来接触到了很多新知识，博客也拖了俩月没更了…😂今天开始慢慢补充案例！</p>\n<ul>\n<li>案例记录的文章会以【实战x-x】的方式作为开头。</li>\n</ul>\n<h2 id=\"工作案例备忘\"><a href=\"#工作案例备忘\" class=\"headerlink\" title=\"工作案例备忘\"></a>工作案例备忘</h2><h3 id=\"AIGC开发案例\"><a href=\"#AIGC开发案例\" class=\"headerlink\" title=\"AIGC开发案例\"></a>AIGC开发案例</h3><blockquote>\n<p>直接应用 + API编排</p>\n</blockquote>\n<ol>\n<li>文生文</li>\n<li>文生图</li>\n<li>文生视频</li>\n<li>图生图</li>\n<li>图生3D</li>\n</ol>\n<hr>\n<h3 id=\"AI辅助编程\"><a href=\"#AI辅助编程\" class=\"headerlink\" title=\"AI辅助编程\"></a>AI辅助编程</h3><blockquote>\n<p>VSCode + 插件为主，编译器用的少</p>\n</blockquote>\n<ol>\n<li>Cursor</li>\n<li>Trae</li>\n<li>Claude</li>\n<li>Cline</li>\n<li>Lingma</li>\n</ol>\n<hr>\n<h3 id=\"AI客户端\"><a href=\"#AI客户端\" class=\"headerlink\" title=\"AI客户端\"></a>AI客户端</h3><blockquote>\n<p>LLM服务商配置、MCP服务部署</p>\n</blockquote>\n<ol>\n<li>Chatbox</li>\n<li>Cherry Studio</li>\n<li>DeepChat</li>\n</ol>\n<hr>\n<h2 id=\"个人案例备忘\"><a href=\"#个人案例备忘\" class=\"headerlink\" title=\"个人案例备忘\"></a>个人案例备忘</h2><p>还没开始😋</p>\n",
            "tags": [
                "记录",
                "AI"
            ]
        },
        {
            "id": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%981-2%20Stable%20Difussion%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90/",
            "url": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%981-2%20Stable%20Difussion%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90/",
            "title": "实战1️⃣-2 | Stable Diffusion图像生成",
            "date_published": "2025-04-17T05:43:01.000Z",
            "content_html": "<p>🔆2025-04-15</p>\n<h1 id=\"实现第一个图像生成Hello-World（Stable-Diffusion模型）\"><a href=\"#实现第一个图像生成Hello-World（Stable-Diffusion模型）\" class=\"headerlink\" title=\"实现第一个图像生成Hello World（Stable Diffusion模型）\"></a>实现第一个图像生成Hello World（Stable Diffusion模型）</h1><blockquote>\n<p>基于沐曦+Gitee平台的40+个大模型，采用vscode&#x2F;Chatbox和Serverless API开发创意型案例，跟踪最新开源模型和编程开发形成案例。<br>本案例使用vscode调用Gitee-Stable Diffusion接口</p>\n</blockquote>\n<h2 id=\"什么是Stable-Diffusion\"><a href=\"#什么是Stable-Diffusion\" class=\"headerlink\" title=\"什么是Stable Diffusion\"></a>什么是Stable Diffusion</h2><p>参考链接<a href=\"https://stabledifffusion.com/\">1️⃣</a><a href=\"https://zhuanlan.zhihu.com/p/622238031\">2️⃣</a><a href=\"https://blog.csdn.net/m0_59162248/article/details/146497738\">3️⃣</a><br>简而言之，就是：<strong>文生图</strong> &#x2F; <code>Text-to-Image</code>。</p>\n<h2 id=\"Gitee\"><a href=\"#Gitee\" class=\"headerlink\" title=\"Gitee\"></a><a href=\"https://gitee.com/\">Gitee</a></h2><p>你需要按照以下顺序操作：</p>\n<ol>\n<li>注册&#x2F;登录Gitee账号</li>\n<li>访问Gitee AI <a href=\"https://ai.gitee.com/\">模力方舟</a></li>\n<li>在模力方舟页面中，找到并启用<a href=\"https://ai.gitee.com/serverless-api/packages/1492\">沐曦-模型资源包</a></li>\n</ol>\n<h2 id=\"获取Stable-Diffusion-API\"><a href=\"#获取Stable-Diffusion-API\" class=\"headerlink\" title=\"获取Stable Diffusion API\"></a>获取Stable Diffusion API</h2><ol>\n<li>选中沐曦模型资源包后,下拉找到stable-diffusion-xl-base-1.0模型</li>\n<li>选择在线体验-&gt;API-&gt;添加令牌，会发现代码中的api-key已被正确替换（此处若无法选择记得先登录）</li>\n</ol>\n<h3 id=\"关于API代码，你需要知道：\"><a href=\"#关于API代码，你需要知道：\" class=\"headerlink\" title=\"关于API代码，你需要知道：\"></a>关于API代码，你需要知道：</h3><ul>\n<li><strong>模型资源地址</strong> API的基础URL（统一资源定位符）</li>\n<li><strong>API密钥</strong> 用于身份验证和授权，以保证用户正常访问。（注意！你会发现其他模型的api-key和此模型都是完全相同的，因为gitee ai的api-key分配模式是一个账号一个）</li>\n<li><strong>模型名称</strong> 指向模型完整名称（一定不能错）</li>\n</ul>\n<p>对于Gitee的三种API代码：<br><strong>1️⃣Python</strong></p>\n<ul>\n<li><code>base_url</code> <a href=\"https://ai.gitee.com/v1\">https://ai.gitee.com/v1</a></li>\n<li><code>api_key</code></li>\n<li><code>model</code> stable-diffusion-xl-base-1.0</li>\n</ul>\n<p><strong>2️⃣JavaScript</strong></p>\n<ul>\n<li><code>baseURL</code> <a href=\"https://ai.gitee.com/v1\">https://ai.gitee.com/v1</a></li>\n<li><code>apiKey</code> </li>\n<li><code>model</code> stable-diffusion-xl-base-1.0</li>\n</ul>\n<p><strong>3️⃣cURL</strong></p>\n<ul>\n<li><code>curl</code> <a href=\"https://ai.gitee.com/v1/images/generations\">https://ai.gitee.com/v1/images/generations</a></li>\n</ul>\n<p><strong>❓️如果你发现这里的curl地址不同于上面的baseurl</strong><br>真聪明！（我这里说话好像ai）这里的url比基础url多了两个资源路径<code>images/generations</code>。<br>这里涉及到<strong>curl命令</strong>：通过命令行直接执行HTTP请求，主要用来测试和调试API。因此其需要包含完整的请求url（包括基础url和资源路径）。</p>\n<blockquote>\n<p>个人对url的具体理解：api发送请求的目标地址，这里直接指向stable-diffusion模型中的图像生成服务。<br>其中：<br><code>ai.gitee.com</code>：使用gitee平台上的AI服务（此网址可以直接访问）<br><code>/v1/images/generations</code>：具体的”模型版本&#x2F;图像&#x2F;生成”的路径</p>\n</blockquote>\n<h2 id=\"使用vscode调用gitee-Stable-Diffusion-API\"><a href=\"#使用vscode调用gitee-Stable-Diffusion-API\" class=\"headerlink\" title=\"使用vscode调用gitee-Stable Diffusion-API\"></a>使用vscode调用gitee-Stable Diffusion-API</h2><p>到这问题就不大了，正常拿个.py文件放上API代码，根据你的需求进行个性化调整。<br>记得缺失的包pip install一下</p>\n<h3 id=\"代码思路\"><a href=\"#代码思路\" class=\"headerlink\" title=\"代码思路\"></a>代码思路</h3><ol>\n<li>导包</li>\n</ol>\n<pre><code class=\"language-python\">import requests                  #HTTP通信\nimport json                      #json数据序列化\nfrom dotenv import load_dotenv   #安全配置\nimport os                        #系统交互\nimport base64                    #数据编码\nfrom io import BytesIO           #二进制流处理\nfrom PIL import Image            #图像操作\n</code></pre>\n<ol start=\"2\">\n<li>配置环境变量<code>load_dotenv() </code></li>\n</ol>\n<ul>\n<li>API_URL</li>\n<li>API_KEY<blockquote>\n<p>为了降低泄露风险、确保安全性，请一定使用用<strong>私有环境变量</strong>进行KEY的配置，不要直接把key写在代码里！</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"3\">\n<li>协议配置 &amp; 数据格式声明<code>headers</code></li>\n</ol>\n<pre><code class=\"language-python\">headers = &#123;\n    &quot;Authorization&quot;: f&quot;Bearer &#123;API_KEY&#125;&quot;, #认证协议\n    &quot;Content-Type&quot;: &quot;application/json&quot;    #数据格式声明\n&#125;\n</code></pre>\n<p>4.向API发送请求时所需的参数<code>payload</code></p>\n<pre><code class=\"language-python\">payload = &#123;                                    #请求参数（根据文档调整）\n    &quot;model&quot;: &quot;stable-diffusion-xl-base-1.0&quot;,   #模型选择\n    &quot;prompt&quot;: &quot;一只穿着宇航服的猫在月球上漫步&quot;,   #业务输入\n    &quot;n&quot;: 1,                                    #生成数量\n    &quot;size&quot;: &quot;1024x1024&quot;,                       #输出规格\n    &quot;response_format&quot;: &quot;b64_json&quot;              #数据返回格式\n&#125;\n</code></pre>\n<p>5.向API发送请求 &amp; 处理响应结果</p>\n<blockquote>\n<p>使用<code>try-except</code>异常处理结构，用于捕获并处理在请求API和处理响应过程中可能出现的异常，确保程序在遇到错误时不会崩溃，而是输出相应的错误信息。</p>\n</blockquote>\n<pre><code class=\"language-python\">try:\n    print(f&quot;请求API: &#123;API_URL&#125;&quot;)\n    response = requests.post(API_URL, headers=headers, json=payload)\n    \n    if response.status_code == 200:\n        result = response.json()\n        if &quot;data&quot; in result and len(result[&quot;data&quot;]) &gt; 0:\n            # 处理base64图像数据\n            image_data = base64.b64decode(result[&quot;data&quot;][0][&quot;b64_json&quot;])\n            image = Image.open(BytesIO(image_data))\n            \n            # 保存图像\n            output_path = &quot;generated_image.png&quot;\n            image.save(output_path)\n            print(f&quot;图像生成成功，已保存到: &#123;output_path&#125;&quot;)\n            image.show()\n        else:\n            print(&quot;API响应中没有有效的图像数据&quot;)\n    else:\n        print(f&quot;请求失败，状态码: &#123;response.status_code&#125;&quot;)\n        print(response.text)\n\nexcept Exception as e:\n    print(f&quot;发生错误: &#123;str(e)&#125;&quot;)\n</code></pre>\n<h2 id=\"后续问题扩展\"><a href=\"#后续问题扩展\" class=\"headerlink\" title=\"后续问题扩展\"></a>后续问题扩展</h2><p>如果你成功调用Stable Diffusion模型的API，并输入中文提示词，会发现生成的图几乎不相关…因此后续需要对提示词<code>prompt</code>进行调整。</p>\n<p>下方 ↓ 跳转查看下一篇文章【实战2️⃣ 接入DeepSeek-R1优化提示词】。</p>\n",
            "tags": [
                "AI"
            ]
        }
    ]
}