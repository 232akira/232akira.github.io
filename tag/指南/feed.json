{
    "version": "https://jsonfeed.org/version/1",
    "title": "Per aspera ad astra • All posts by \"指南\" tag",
    "description": "欢迎交流学习!",
    "home_page_url": "https://232akira.github.io",
    "items": [
        {
            "id": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%982-%E6%8E%A5%E5%85%A5DeepSeek-R1%E4%BC%98%E5%8C%96%E6%8F%90%E7%A4%BA%E8%AF%8D/",
            "url": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%982-%E6%8E%A5%E5%85%A5DeepSeek-R1%E4%BC%98%E5%8C%96%E6%8F%90%E7%A4%BA%E8%AF%8D/",
            "title": "实战2️⃣ 接入DeepSeek-R1优化提示词",
            "date_published": "2025-04-17T05:43:07.000Z",
            "content_html": "<p>🔆2025-04-16</p>\n<h2 id=\"优化Stable-Difussion生成效果-接入DeepSeek-R1处理提示词\"><a href=\"#优化Stable-Difussion生成效果-接入DeepSeek-R1处理提示词\" class=\"headerlink\" title=\"优化Stable Difussion生成效果(接入DeepSeek-R1处理提示词)\"></a>优化Stable Difussion生成效果(接入DeepSeek-R1处理提示词)</h2><p>哇这里只加了一个功能流程中就出现很多bug😅待我慢慢梳理一下</p>\n<h2 id=\"问题引入\"><a href=\"#问题引入\" class=\"headerlink\" title=\"问题引入\"></a>问题引入</h2><p>上面说到对提示词进行优化，那么可以直接再引入一个文本生成模型来进行这个操作，那么整体的流程就变为：</p>\n<pre><code>A[原始提示词] --&gt; B(DeepSeek-R1优化)--&gt; C[优化后提示词]\n</code></pre>\n<p>然后才是：</p>\n<pre><code>C --&gt; D(Stable Diffusion生成)\nD --&gt; E[最终图像]\n</code></pre>\n<h2 id=\"获取DeepSeek-R1-API\"><a href=\"#获取DeepSeek-R1-API\" class=\"headerlink\" title=\"获取DeepSeek-R1 API\"></a>获取DeepSeek-R1 API</h2><p>和先前拿到Stable Diffusion是同一个方法：访问<code>沐曦资源包</code>-&gt;<code>DeepSeek-R1</code>-&gt;<code>API</code></p>\n<ul>\n<li><code>base_url</code> <a href=\"https://ai.gitee.com/v1\">https://ai.gitee.com/v1</a></li>\n<li><code>api_key</code></li>\n<li><code>model</code> DeepSeek-R1</li>\n</ul>\n<h2 id=\"代码思路\"><a href=\"#代码思路\" class=\"headerlink\" title=\"代码思路\"></a>代码思路</h2><p>简而言之，就是在Stable Diffusion拿到提示词之前，把原始提示词先丢给DeepSeek处理一下，也可以说是<strong>双模型协同机制</strong>。</p>\n<h3 id=\"DeepSeek-R1\"><a href=\"#DeepSeek-R1\" class=\"headerlink\" title=\"DeepSeek-R1\"></a>DeepSeek-R1</h3><blockquote>\n<p>作为「提示词工程师」</p>\n</blockquote>\n<ol>\n<li>message模块向其发送指令，比如：你是一个专业的SD提示词优化助手等等</li>\n<li>接受用户输入的提示词</li>\n<li>优化<br>优化的策略可以有很多，针对Stable Diffusion我们可以这样做：</li>\n</ol>\n<ul>\n<li>转换成英文</li>\n<li>语法结构优化（将描述性语言转换为SD擅长的标签式表达）</li>\n<li>自动补充合适的艺术风格细节（如添加”ultra detailed, 8k”等）</li>\n</ul>\n<p><em><strong>⚠️注意！这里有个致命的提示词要点，影响整个案例是否成功。将放到后面作为重点补充。</strong></em></p>\n<ol start=\"4\">\n<li>输出经优化后的提示词</li>\n</ol>\n<pre><code>def get_optimized_prompt(original_prompt: str) -&gt; str：\n</code></pre>\n<h3 id=\"Stable-Diffusion\"><a href=\"#Stable-Diffusion\" class=\"headerlink\" title=\"Stable Diffusion\"></a>Stable Diffusion</h3><blockquote>\n<p>作为「图像生成器」</p>\n</blockquote>\n<ol>\n<li>接受经优化后的提示词</li>\n<li>输出文生图结果</li>\n</ol>\n<pre><code>def generate_image(prompt: str, output_path: str = &quot;output-DS-R1.png&quot;) -&gt; bool:\n</code></pre>\n<h2 id=\"报错梳理\"><a href=\"#报错梳理\" class=\"headerlink\" title=\"报错梳理\"></a>报错梳理</h2><h3 id=\"模型资源地址-模型名称置入错误\"><a href=\"#模型资源地址-模型名称置入错误\" class=\"headerlink\" title=\"模型资源地址&#x2F;模型名称置入错误\"></a>模型资源地址&#x2F;模型名称置入错误</h3><p>这个其实是非常没有技术含量的报错🫥因为个案例的代码比较冗长（200行左右），并且模型资源置入的地址的代码位置比较分散，所以在快速大量修改整体代码时，很容易没有调用到模型资源，但往往报错的时候不会意识到是这么简单的问题。</p>\n<p><strong>举个🌰：</strong><br>遇到了401报错，那么可能是API Key：</p>\n<ul>\n<li>为空</li>\n<li>已过期</li>\n<li>不属于当前使用的API服务（比如错用OpenAI的Key调用 Gitee AI，我就是没注意到这里）</li>\n</ul>\n<h3 id=\"运行无报错但是无输出\"><a href=\"#运行无报错但是无输出\" class=\"headerlink\" title=\"运行无报错但是无输出\"></a>运行无报错但是无输出</h3><p>这里属于和模型无关的基础代码编写问题了。需要添加一定的逻辑，如：</p>\n<ul>\n<li>增加代码调试输出逻辑</li>\n<li>强制报错测试<br>最好是加个运行日志，方便看看细节啥情况。</li>\n</ul>\n<p>这里问了DS说的很专业，码一下👉️错误熔断设计：<code>独立捕获每个API的异常</code> &amp; <code>生成过程状态实时反馈</code></p>\n",
            "tags": [
                "指南",
                "实战"
            ]
        },
        {
            "id": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%981-Stable%20Difussion%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90/",
            "url": "https://232akira.github.io/2025/04/17/%E5%AE%9E%E6%88%981-Stable%20Difussion%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90/",
            "title": "实战1️⃣ Stable Difussion图像生成",
            "date_published": "2025-04-17T05:43:01.000Z",
            "content_html": "<p>🔆2025-04-15</p>\n<h1 id=\"实现第一个图像生成Hello-World（Stable-Difussion模型）\"><a href=\"#实现第一个图像生成Hello-World（Stable-Difussion模型）\" class=\"headerlink\" title=\"实现第一个图像生成Hello World（Stable Difussion模型）\"></a>实现第一个图像生成Hello World（Stable Difussion模型）</h1><blockquote>\n<p>基于沐曦+Gitee平台的40+个大模型，采用vscode&#x2F;Chatbox和Serverless API开发创意型案例，跟踪最新开源模型和编程开发形成案例。<br>本案例使用vscode调用Gitee-Stable Diffusion接口</p>\n</blockquote>\n<h2 id=\"什么是Stable-Difussion\"><a href=\"#什么是Stable-Difussion\" class=\"headerlink\" title=\"什么是Stable Difussion\"></a>什么是Stable Difussion</h2><p>参考链接<a href=\"https://stabledifffusion.com/\">1️⃣</a><a href=\"https://zhuanlan.zhihu.com/p/622238031\">2️⃣</a><a href=\"https://blog.csdn.net/m0_59162248/article/details/146497738\">3️⃣</a><br>简而言之，就是：<strong>文生图</strong>。</p>\n<h2 id=\"Gitee\"><a href=\"#Gitee\" class=\"headerlink\" title=\"Gitee\"></a><a href=\"https://gitee.com/\">Gitee</a></h2><p>你需要按照以下顺序操作：</p>\n<ol>\n<li>注册&#x2F;登录Gitee账号</li>\n<li>访问Gitee AI <a href=\"https://ai.gitee.com/\">模力方舟</a></li>\n<li>使用<a href=\"https://ai.gitee.com/serverless-api/packages/1492\">沐曦-模型资源包</a></li>\n</ol>\n<h2 id=\"获取Stable-Difussion-API\"><a href=\"#获取Stable-Difussion-API\" class=\"headerlink\" title=\"获取Stable Difussion API\"></a>获取Stable Difussion API</h2><ol>\n<li>选中沐曦模型资源包后,下拉找到stable-diffusion-xl-base-1.0模型</li>\n<li>选择在线体验-&gt;API-&gt;添加令牌，会发现代码中的api-key已被正确替换（此处若无法选择记得先登录）</li>\n</ol>\n<h3 id=\"关于API代码，你需要知道：\"><a href=\"#关于API代码，你需要知道：\" class=\"headerlink\" title=\"关于API代码，你需要知道：\"></a>关于API代码，你需要知道：</h3><ul>\n<li><strong>模型资源地址</strong> API的基础URL（统一资源定位符）</li>\n<li><strong>API密钥</strong> 用于身份验证和授权，以保证用户正常访问。（注意！你会发现其他模型的api-key和此模型都是完全相同的，因为gitee ai的api-key分配模式是一个账号一个）</li>\n<li><strong>模型名称</strong> 指向模型完整名称（一定不能错）</li>\n</ul>\n<p>对于Gitee的三种API代码：<br><strong>1️⃣Python</strong></p>\n<ul>\n<li><code>base_url</code> <a href=\"https://ai.gitee.com/v1\">https://ai.gitee.com/v1</a></li>\n<li><code>api_key</code></li>\n<li><code>model</code> stable-diffusion-xl-base-1.0</li>\n</ul>\n<p><strong>2️⃣JavaScript</strong></p>\n<ul>\n<li><code>baseURL</code> <a href=\"https://ai.gitee.com/v1\">https://ai.gitee.com/v1</a></li>\n<li><code>apiKey</code> </li>\n<li><code>model</code> stable-diffusion-xl-base-1.0</li>\n</ul>\n<p><strong>3️⃣cURL</strong></p>\n<ul>\n<li><code>curl</code> <a href=\"https://ai.gitee.com/v1/images/generations\">https://ai.gitee.com/v1/images/generations</a></li>\n</ul>\n<p><em><strong>如果你发现这里的curl地址不同于上面的baseurl❓️</strong></em><br>真聪明！（我这里说话好像ai）这里的url比基础url多了两个资源路径<code>images/generations</code>。<br>这里涉及到<strong>curl命令</strong>：通过命令行直接执行HTTP请求，主要用来测试和调试API。因此其需要包含完整的请求url（包括基础url和资源路径）。</p>\n<blockquote>\n<p>我个人对url的具体理解：api发送请求的目标地址，这里直接指向stable-diffusion模型中的图像生成服务。<br>其中：<br><code>ai.gitee.com</code>：使用gitee平台上的AI服务（此网址可以直接访问）<br><code>/v1/images/generations</code>：具体的”模型版本&#x2F;图像&#x2F;生成”的路径</p>\n</blockquote>\n<h2 id=\"使用vscode调用gitee-Stable-Diffusion-API\"><a href=\"#使用vscode调用gitee-Stable-Diffusion-API\" class=\"headerlink\" title=\"使用vscode调用gitee-Stable Diffusion-API\"></a>使用vscode调用gitee-Stable Diffusion-API</h2><p>到这问题就不大了，正常拿个.py文件放上API代码，根据你的需求进行个性化调整。<br>记得缺失的包pip install一下</p>\n<h3 id=\"代码思路\"><a href=\"#代码思路\" class=\"headerlink\" title=\"代码思路\"></a>代码思路</h3><p><code>配置层</code>-&gt;<code>协议层</code>-&gt;<code>业务逻辑层</code>-&gt;<code>执行控制层</code></p>\n<h2 id=\"后续问题\"><a href=\"#后续问题\" class=\"headerlink\" title=\"后续问题\"></a>后续问题</h2><p>如果你成功调用Stable Diffusion模型的API，并输入中文提示词，会发现生成的图几乎不相关。因此后续需要对提示词prompt进行调整。此处可查看【实战2️⃣ 接入DeepSeek-R1优化提示词】</p>\n",
            "tags": [
                "指南",
                "实战"
            ]
        },
        {
            "id": "https://232akira.github.io/2025/04/16/%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/",
            "url": "https://232akira.github.io/2025/04/16/%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/",
            "title": "入门指南",
            "date_published": "2025-04-16T07:29:31.000Z",
            "content_html": "<p>关于案例的内容较多，可点击本页底部标签跳转查看。</p>\n<h1 id=\"工作流入门\"><a href=\"#工作流入门\" class=\"headerlink\" title=\"工作流入门\"></a>工作流入门</h1><h2 id=\"步骤1-安装\"><a href=\"#步骤1-安装\" class=\"headerlink\" title=\"步骤1 安装\"></a>步骤1 安装</h2><h3 id=\"安装vscode\"><a href=\"#安装vscode\" class=\"headerlink\" title=\"安装vscode\"></a>安装vscode</h3><h4 id=\"本体\"><a href=\"#本体\" class=\"headerlink\" title=\"本体\"></a>本体</h4><p><a href=\"https://code.visualstudio.com/\">点我查看官网</a></p>\n<h4 id=\"AI编程拓展\"><a href=\"#AI编程拓展\" class=\"headerlink\" title=\"AI编程拓展\"></a>AI编程拓展</h4><ol>\n<li><p>Cline<br><a href=\"https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev\">点我查看官网</a></p>\n</li>\n<li><p>Copilot<br><a href=\"https://marketplace.visualstudio.com/items?itemName=GitHub.copilot\">点我查看官网</a></p>\n</li>\n</ol>\n<p>新安装的vscode需要更多基础拓展（如python等）</p>\n<h3 id=\"安装Chatbox\"><a href=\"#安装Chatbox\" class=\"headerlink\" title=\"安装Chatbox\"></a>安装Chatbox</h3><p>这里调用Gitee的大模型API会出现报错，等我二编。</p>\n<h2 id=\"步骤2-实战\"><a href=\"#步骤2-实战\" class=\"headerlink\" title=\"步骤2 实战\"></a>步骤2 实战</h2><h3 id=\"实战1️⃣-Stable-Difussion图像生成\"><a href=\"#实战1️⃣-Stable-Difussion图像生成\" class=\"headerlink\" title=\"实战1️⃣ Stable Difussion图像生成\"></a>实战1️⃣ Stable Difussion图像生成</h3><p>已完成记录，具体可阅览本站同名文章。</p>\n<h3 id=\"实战2️⃣-接入DeepSeek-R1优化提示词\"><a href=\"#实战2️⃣-接入DeepSeek-R1优化提示词\" class=\"headerlink\" title=\"实战2️⃣ 接入DeepSeek-R1优化提示词\"></a>实战2️⃣ 接入DeepSeek-R1优化提示词</h3><p>编写中…</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>Serverless API编程开发指南</li>\n<li><a href=\"https://ai.gitee.com/docs/openapi/v1#tag/%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90/POST/images/generations\">Gitee AI Inference OpenAPI</a></li>\n</ol>\n",
            "tags": [
                "指南"
            ]
        }
    ]
}